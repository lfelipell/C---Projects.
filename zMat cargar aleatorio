#include "conio.h"
#include "iomanip"
#include "iostream"
using namespace std;

#define N 8
#define M 8

struct matriz{
	int mat[N][M];
};



void cargarAleatorio(matriz abc[N][M],int n){
	int i,j,k,l;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			for(k=0;k<n;k++){
				for(l=0;l<n;l++){
					abc[i][j].mat[k][l] = rand() % 100;
				}
			}
		}
	}
}









void mostrar(matriz abc[N][M],int n){
	int i,j,k,l;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			for(k=0;k<n;k++){
				for(l=0;l<n;l++){
					cout<< setw(3) <<abc[i][k].mat[j][l]<<" ";
				}
				cout<<"  ";

			}
			cout<<endl;
		}
		cout<<endl;
	}
}


void ordenarXcolumna(matriz abc[N][M],int n){
	int i,j,k,l,aux[n*n*n],a=0;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			for(k=0;k<n;k++){
				for(l=0;l<n;l++){
					aux[a++]=abc[j][i].mat[l][k];
					burbuja(aux,a);
				}
			}
			burbuja(aux,a);
		}
	}
}

void burbuja(int vec[],int n){
	int aux[0],i
		for(i=0;i<n;i++){
			for(j=i+1;j<n;j++){
				if(vec[j]<vec[i]){
				aux=vec[i];
				vec[i]=vec[j];
				vec[j]=aux;
				}
			}
		}
}
		





int main(){
	int n;
	matriz abc[N][M];
	cout<<"Ingrese n*n: ";
	cin>>n;
	cargarAleatorio(abc,n);
	mostrar(abc,n);
	ordenarXcolumna(abc,n)
    mostrar(abc,n)
	getch();
	return(569);
}

